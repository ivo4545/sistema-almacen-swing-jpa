/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package IGU;




import java.util.ArrayList;
import java.util.List;
import javax.swing.event.PopupMenuEvent;
import javax.swing.event.PopupMenuListener;
import javax.swing.table.DefaultTableModel;
import logica.AutoCompletarPopup;
import logica.ControladoraLogica;
import logica.Producto;

/**
 *
 * @author ivost
 */
public class ConsultarProd extends javax.swing.JFrame {
    
    ControladoraLogica control = new ControladoraLogica();
    
    
  
    @SuppressWarnings("empty-statement")
    public ConsultarProd() {       
        initComponents();
        initAutoComplete();
    //    initBuscar();
    }
    
    
    public List<String> listaNom(){
        
        //Metodo para la obtencion de los nombres de los productos
        
        List<String> nom = new ArrayList<>();
        List<Producto> listaprod = control.traerprod();
        for(Producto prod: listaprod){
            nom.add(prod.getNombre());
        };
        return nom;
    }
    
    
    //METODO PARA INICIALIZAR EL AUTOCOMPLETADO SIEMPRE QUE SE CREE ESTA VENTANA
    public void initAutoComplete() {
   
        /*Metodos de PopupMenuListener
        1- popupMenuWillBecomeVisible: se dispara justo antes de que aparezca el men√∫.
        2- popupMenuWillBecomeInvisible: antes de cerrar.
        3- popupMenuCanceled: si se cierra de forma cancelada (p. ej. clic afuera)
        
        En este caso utilice el segundo para que, antes de cerrarse se ejecute el codigo que compara lo que hay en txt1 (Buscar)
        con todos los nombres de los productos, cuando se encuentra el nombre del producto de txt1 en la lista,
        setea un modelo de tabla que 
        contiene solo los valores de dicho producto.
        */
        
        AutoCompletarPopup autoCompletePopup = new AutoCompletarPopup(txt1, listaNom());
        
        
        
        autoCompletePopup.getPopup().addPopupMenuListener(new PopupMenuListener(){
            @Override
            public void popupMenuWillBecomeVisible(PopupMenuEvent e) {
                
            }

            @Override
            public void popupMenuWillBecomeInvisible(PopupMenuEvent e) {
                for(String nombre: listaNom()){
                    if(nombre.equals(txt1.getText())){
                        
                        DefaultTableModel tablaModelo = new DefaultTableModel();
                            
                            String titulos[] = {"Nombre","Categoria","Precio","ID"};
                            tablaModelo.setColumnIdentifiers(titulos);
                            
                            List<Producto> listaprod = control.traerprod();
                            
                            for(Producto prod:listaprod){
                                
                                if(prod.getNombre().equals(nombre)){
                                    Object[] produc = {prod.getNombre(),prod.getCategoria().getNombre(),prod.getPrecio_venta(),prod.getIdProducto()};
                                    
                                    tablaModelo.addRow(produc);
                                    TablaProd1.setModel(tablaModelo);
                                    break;
                                    
                                }
                            }
                        
                    }
                }
            }

            @Override
            public void popupMenuCanceled(PopupMenuEvent e) {  
                
            } 
            
        });    
    }
    
    
    
     
  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaProd1 = new javax.swing.JTable();
        txt1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TablaProd1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TablaProd1);

        txt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        jLabel1.setText("Buscar:");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(668, 668, 668)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)))
                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 7, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarTabla();
    }//GEN-LAST:event_formWindowOpened

    private void txt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt1ActionPerformed
        
    }//GEN-LAST:event_txt1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Principal patna = new Principal();
        patna.setLocationRelativeTo(null);
        patna.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
//HACER EL METODO QUE CUANDO TOQUE ENTER SE CARGUE EL PRODUCTO QUYE ESTA ESCRITO EN EL TEXTFIELD


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaProd1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txt1;
    // End of variables declaration//GEN-END:variables
    
    protected void cargarTabla(){
        
        //Metodo para inicializar la tabla con todos los productos y caracteristicas permitidas para el Usuario
        
        DefaultTableModel modeloTabla = new DefaultTableModel(){
            
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }           
        };
        
        String titulos[] = {"Nombre","Categoria","Precio","ID"};
        modeloTabla.setColumnIdentifiers(titulos);
        
        List <Producto> listaProd = control.traerprod();
        
        if (listaProd != null){
            for(Producto prod:listaProd){
                Object[] producto = {prod.getNombre(),prod.getCategoria().getNombre(),prod.getPrecio_venta(),prod.getIdProducto()};
                
                modeloTabla.addRow(producto);
            }
        }
        
        TablaProd1.setModel(modeloTabla);
        
    }
    


}
